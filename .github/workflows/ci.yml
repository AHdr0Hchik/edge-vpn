name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:

jobs:
  server:
    name: Server (Node+TS+Prisma)
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: edge_vpn
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=20
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/edge_vpn?schema=public
    defaults:
      run:
        working-directory: server
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: server/package-lock.json
      - run: npm ci
      - run: npx prisma generate
      - run: npx prisma migrate deploy
      - run: npm run lint
      - run: npm run build

  gateway:
    name: Gateway-agent (Node+TS)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: gateway-agent
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: gateway-agent/package-lock.json
      - run: npm ci
      - run: npm run lint
      - run: npm run build

  device:
    name: Device-agent (Go)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: device-agent
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      - run: go vet ./...
      - run: go build -o bin/device-agent